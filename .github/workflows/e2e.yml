name: E2E Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  e2e:
    runs-on: ubuntu-latest
    permissions:
      packages: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and cache base image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.base
          tags: story-manager-base:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install frontend dependencies
        run: npm --prefix frontend ci

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
        working-directory: frontend

      - name: Build container
        run: docker compose -f docker-compose.e2e.yml build --build-arg BASE_IMAGE=story-manager-base:latest

      - name: Run container
        run: docker compose -f docker-compose.e2e.yml up -d

      - name: Wait for services to be ready
        run: |
          timeout 300 bash -c '
            echo "Waiting for backend to be ready..."
            until curl --output /dev/null --silent --fail http://localhost:8000; do
              printf "."
              sleep 5
            done
            echo "Backend is up!"

            echo "Waiting for frontend to be ready..."
            until curl --output /dev/null --silent --fail http://localhost:7890; do
              printf "."
              sleep 5
            done
            echo "Frontend is up!"
          '

      - name: Show docker logs on failure
        if: failure()
        run: docker logs story-manager-story-manager-e2e-1

      - name: Run Playwright tests
        run: npm run test:e2e
        working-directory: frontend

      - name: Stop container
        if: always()
        run: docker compose -f docker-compose.e2e.yml down
